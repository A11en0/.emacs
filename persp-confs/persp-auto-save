;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "plan.org" "/home/allen/gtd/plan.org" org-mode) (def-buffer "config.json" "/home/allen/config.json" json-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 3) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 144) (min-pixel-width . 170) (min-pixel-height-ignore . 108) (min-pixel-width-ignore . 51) (min-pixel-height-safe . 36) (min-pixel-width-safe . 34)) leaf (pixel-width . 1249) (pixel-height . 1328) (total-width . 73) (total-height . 36) (normal-height . 1.0) (normal-width . 1.0) (buffer "example.tex" (selected . t) (hscroll . 0) (fringes 8 8 t) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 182) (start . 1)))) (def-params nil) t nil nil) (def-persp "[p]Beamer-HFUT" ((def-buffer "example.tex" "/home/allen/Documents/Beamer-HFUT/example.tex" latex-mode) (def-buffer "Beamer-HFUT" "~/Documents/Beamer-HFUT/" dired-mode)) (def-wconf nil) (def-params ((persp-mode-projectile-bridge . t))) nil nil nil))